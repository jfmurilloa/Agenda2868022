@model Agenda2868022.Models.Aprendiz

@{
    ViewBag.Title = "Create";
}

<h2>Create Aprendiz</h2>
@if(@ViewBag.Error != null)
{
    <h3 class="text-danger">
        @ViewBag.Error
    </h3>
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Aprendiz</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Documento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Documento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Documento, "", new { @class = "text-danger" })
            @if (ViewBag.ErrorDoc != null)
            {
                <p class="text-danger">
                    @ViewBag.ErrorDoc
                </p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Genero", (List<SelectListItem>)ViewBag.Genero, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
            @if (ViewBag.ErrorCel != null)
            {
                <p class="text-danger">
                    @ViewBag.ErrorCel
                </p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            @if (ViewBag.ErrorCor != null)
            {
                <p class="text-danger">
                    @ViewBag.ErrorCor
                </p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FichaId, "Codigo Ficha", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("FichaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FichaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AcudienteId, "Acudiente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AcudienteId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AcudienteId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
